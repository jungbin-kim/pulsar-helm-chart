#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

## deployed withh emptyDir
volumes:
  persistence: false # true 로 바꾸고 storage mount 해서 시도 시 실패

# disabled AntiAffinity
affinity:
  anti_affinity: false

# disable auto recovery
components:
  autorecovery: false
  pulsar_manager: true
  proxy: false

zookeeper:
  replicaCount: 1
  volumes:
    data:
      storageClassName: "csi-storageclass-dynamic"
  # securityContext:
  #   fsGroupChangePolicy: "Always"

bookkeeper:
  replicaCount: 1
  configData:
    # minimal memory use for bookkeeper
    # https://bookkeeper.apache.org/docs/reference/config#db-ledger-storage-settings
    dbStorage_writeCacheMaxSizeMb: "32"
    dbStorage_readAheadCacheMaxSizeMb: "32"
    dbStorage_rocksDB_writeBufferSizeMB: "8"
    dbStorage_rocksDB_blockCacheSize: "8388608"
  volumes:
    common:
      storageClassName: "csi-storageclass-dynamic"

broker:
  replicaCount: 1
  configData:
    ## Enable `autoSkipNonRecoverableData` since bookkeeper is running
    ## without persistence
    autoSkipNonRecoverableData: "true"
    # storage settings
    managedLedgerDefaultEnsembleSize: "1"
    managedLedgerDefaultWriteQuorum: "1"
    managedLedgerDefaultAckQuorum: "1"

    ### --- Authentication --- ###
    authenticationEnabled: "true"
    # Specify the authentication providers to use
    authenticationProviders: "com.liderahenkpulsar.auth.BasicAuthProvider"
    # Define the authentication method name that matches your AuthenticationBasicAuth class
    authenticationMethods: "customAuth"
    brokerClientAuthenticationPlugin: "com.liderahenkpulsar.auth.AuthenticationBasicAuth"

# extraVolume 에 미리 custom auth plugin jar 파일을 넣어두어야함
  extraVolumes:
    - name: auth-plugin-volume
      persistentVolumeClaim:
        claimName: pvc-static
  extraVolumeMounts:
    - name: auth-plugin-volume
      mountPath: /pulsar/lib/liderahenkpulsar.auth-1.0.jar
      subPath: liderahenkpulsar.auth-1.0.jar
# nhn cloud lb 사용 시 true (broker에는 lb 서비스 리소스가 없기 때문에 별도 템플릿 추가함)
  loadBalancer:
    enabled: true

# proxy:
#   replicaCount: 1
#   configData:
#     authenticationEnabled: "true"
#     forwardAuthorizationCredentials: "true"

pulsar_manager:
  configData:
    ENV_SPRING_CONFIGURATION_FILE: "/pulsar-manager/pulsar-manager/application.properties"
    SPRING_CONFIGURATION_FILE: "/pulsar-manager/pulsar-manager/application.properties"
    PULSAR_MANAGER_OPTS: " -Dlog4j2.formatMsgNoLookups=true"
  volumes:
    data:
      storageClassName: "csi-storageclass-dynamic"
